DROP FUNCTION IF EXISTS service.isfuturedate(timestamp with time zone);

CREATE OR REPLACE FUNCTION service.isfuturedate(
	timestamp with time zone)
    RETURNS boolean
    LANGUAGE 'sql'
    COST 100
    IMMUTABLE PARALLEL UNSAFE
AS $BODY$
SELECT CASE WHEN $1 > CURRENT_TIMESTAMP
            THEN true ELSE false
       END
$BODY$;

ALTER FUNCTION service.isfuturedate(timestamp with time zone)
    OWNER TO pcdb_admin;

DROP FUNCTION IF EXISTS service.ispastdate(timestamp with time zone);

CREATE OR REPLACE FUNCTION service.ispastdate(
	timestamp with time zone)
    RETURNS boolean
    LANGUAGE 'sql'
    COST 100
    IMMUTABLE PARALLEL UNSAFE
AS $BODY$
SELECT CASE WHEN $1 < CURRENT_TIMESTAMP
            THEN true ELSE false
       END
$BODY$;

ALTER FUNCTION service.ispastdate(timestamp with time zone)
    OWNER TO pcdb_admin;

-- ALTER TABLE IF EXISTS service."Service" DROP COLUMN IF EXISTS status;
 
ALTER TABLE IF EXISTS service."Service"
    ADD COLUMN status service."enum_Service_status" GENERATED ALWAYS AS (
CASE
    WHEN (("validFrom" IS NULL) AND ("validTill" IS NULL) AND ("isPublished" = 0)) THEN 'DRAFT'::service."enum_Service_status"
    WHEN (("validFrom" IS NOT NULL) AND service.ispastdate("validFrom") AND (("validTill" IS NULL) OR service.isfuturedate("validTill")) AND ("isPublished" = 1)) THEN 'ACTIVE'::service."enum_Service_status"
    WHEN (("validFrom" IS NOT NULL) AND service.isfuturedate("validFrom") AND ("isPublished" = 1)) THEN 'SCHEDULED'::service."enum_Service_status"
    WHEN (("validFrom" IS NOT NULL) AND ("validFrom" < "validTill") AND service.ispastdate("validTill")) THEN 'INACTIVE'::service."enum_Service_status"
    ELSE NULL::service."enum_Service_status"
END) STORED;

UPDATE service."Service" SET "validTill"= "validTill"
